// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
// swift-module-flags: -target arm64-apple-ios14.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name SalesforceSDKCommon
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import SalesforceSDKCommon
import Swift
import _Concurrency
import _StringProcessing
@_hasMissingDesignatedInitializers @objc(SFSDKKeychainResult) public class KeychainResult : ObjectiveC.NSObject {
  @objc final public let success: Swift.Bool
  @objc final public let status: Darwin.OSStatus
  @objc final public let data: Foundation.Data?
  @objc final public let error: Foundation.NSError?
  @objc deinit
}
@objc public enum KeychainItemAccessibility : Swift.Int {
  case whenUnlocked
  case whenUnlockedThisDeviceOnly
  case afterFirstUnlock
  case afterFirstUnlockThisDeviceOnly
  case whenPasscodeSetThisDeviceOnly
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_inheritsConvenienceInitializers @objc(SFSDKKeychainHelper) public class KeychainHelper : ObjectiveC.NSObject {
  @objc public static var accessibilityAttribute: CoreFoundation.CFString? {
    get
  }
  @objc public class func read(service: Swift.String, account: Swift.String?) -> SalesforceSDKCommon.KeychainResult
  @objc public class func createIfNotPresent(service: Swift.String, account: Swift.String?) -> SalesforceSDKCommon.KeychainResult
  @objc public class func write(service: Swift.String, data: Foundation.Data, account: Swift.String?) -> SalesforceSDKCommon.KeychainResult
  @objc public class func reset(service: Swift.String, account: Swift.String?) -> SalesforceSDKCommon.KeychainResult
  @objc public class func remove(service: Swift.String, account: Swift.String?) -> SalesforceSDKCommon.KeychainResult
  @objc public class func removeAll() -> SalesforceSDKCommon.KeychainResult
  @discardableResult
  @objc public class func setAccessibleAttribute(_ secAttrAccessible: SalesforceSDKCommon.KeychainItemAccessibility) -> SalesforceSDKCommon.KeychainResult
  @objc public class func clearCaches()
  @objc override dynamic public init()
  @objc deinit
}
extension SalesforceSDKCommon.KeychainItemAccessibility : Swift.Equatable {}
extension SalesforceSDKCommon.KeychainItemAccessibility : Swift.Hashable {}
extension SalesforceSDKCommon.KeychainItemAccessibility : Swift.RawRepresentable {}
